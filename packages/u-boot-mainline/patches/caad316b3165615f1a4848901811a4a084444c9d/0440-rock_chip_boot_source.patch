From d76eb7f8d225aa67a6afaad023933370da78d0e9 Mon Sep 17 00:00:00 2001
From: hyphop <art@khadas.com>
Date: Mon, 18 May 2020 17:19:09 +0900
Subject: [PATCH] rock_chip_boot_source

setup boot_source var for uboot runtime env

---
 arch/arm/mach-rockchip/board.c | 58 ++++++++++++++++++++++++++++++++--
 arch/arm/mach-rockchip/spl.c   |  4 +++
 2 files changed, 60 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-rockchip/board.c b/arch/arm/mach-rockchip/board.c
index 14b9e89e..e786ab1e 100644
--- a/arch/arm/mach-rockchip/board.c
+++ b/arch/arm/mach-rockchip/board.c
@@ -16,6 +16,59 @@
 #include <asm/arch-rockchip/misc.h>
 #include <power/regulator.h>
 
+#define BOOT_DEVICE_NAND      1
+#define BOOT_DEVICE_EMMC      2
+#define BOOT_DEVICE_SPI       3
+#define BOOT_DEVICE_SPI_NAND  4
+#define BOOT_DEVICE_SD        5
+#define BOOT_DEVICE_USB       10
+
+static u32 rk_get_boot_device(void)
+{
+    u32  bootdevice_id  = readl(0x01000000);
+
+    if ( bootdevice_id < 100 || bootdevice_id > 120 )
+	return 0;
+
+    return bootdevice_id - 100;
+}
+
+static void rk_set_boot_source(void)
+{
+
+    const char *source;
+    u32 boot_device_id = rk_get_boot_device();
+    switch (boot_device_id) {
+    case BOOT_DEVICE_EMMC:
+	source = "emmc";
+	break;
+
+    case BOOT_DEVICE_NAND:
+	source = "nand";
+	break;
+
+    case BOOT_DEVICE_SPI:
+	source = "spi";
+	break;
+
+    case BOOT_DEVICE_SD:
+	source = "sd";
+	break;
+
+    case BOOT_DEVICE_USB:
+	source = "usb";
+	break;
+
+    default:
+	source = "unknown";
+    }
+
+    printf("*** BOOT_SOURCE %u = %s ***\n", boot_device_id, source);
+
+    env_set("boot_source", source);
+
+}
+
 DECLARE_GLOBAL_DATA_PTR;
 
 __weak int rk_board_late_init(void)
@@ -26,10 +79,11 @@ __weak int rk_board_late_init(void)
 int board_late_init(void)
 {
 	setup_boot_mode();
-
+	rk_set_boot_source();
 	return rk_board_late_init();
 }
 
+
 int board_init(void)
 {
 	int ret;
@@ -39,7 +93,7 @@ int board_init(void)
 	if (ret)
 		debug("%s: Cannot enable boot on regulator\n", __func__);
 #endif
-
+	rk_set_boot_source();
 	return 0;
 }
 
diff --git a/arch/arm/mach-rockchip/spl.c b/arch/arm/mach-rockchip/spl.c
index 0b76af60..0a804bd5 100644
--- a/arch/arm/mach-rockchip/spl.c
+++ b/arch/arm/mach-rockchip/spl.c
@@ -30,5 +30,10 @@ const char *board_spl_was_booted_from(void)
 	u32  bootdevice_brom_id = readl(BROM_BOOTSOURCE_ID_ADDR);
 	const char *bootdevice_ofpath = NULL;
 
+	// save value+100 to safety mem area 0x01000000
+	// for next boot_source usage in uboot stage
+	writel(bootdevice_brom_id + 100, 0x01000000);
+	printf("*** BOOT_SOURCE_ID %u (2:emmc 3:spi 5:sd ...)***\n", bootdevice_brom_id );
+
 	if (bootdevice_brom_id < ARRAY_SIZE(boot_devices))
 		bootdevice_ofpath = boot_devices[bootdevice_brom_id];
 
-- 
2.17.1

